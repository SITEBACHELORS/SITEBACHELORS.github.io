{"ast":null,"code":"import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nconst fallbackLng = ['en'];\nconst availableLanguages = ['en', 'ko', 'chi'];\nconst options = {\n  // order and from where user language should be detected\n  order: ['navigator', 'htmlTag', 'path', 'subdomain'],\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n  // cache user language on\n  caches: ['localStorage', 'cookie'],\n  excludeCacheFor: ['cimode'],\n  // languages to not persist (cookie, localStorage)\n\n  // optional expire and domain for set cookie\n  cookieMinutes: 10,\n  cookieDomain: 'myDomain',\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement,\n  // only detect languages that are in the whitelist\n  checkWhitelist: true\n};\ni18n.use(Backend) // load translation using xhr -> see /public/locales. We will add locales in the next step\n.use(LanguageDetector) // detect user language\n.use(initReactI18next) // pass the i18n instance to react-i18next.\n.init({\n  fallbackLng,\n  // if user computer language is not on the list of available languages, than we will be using the fallback language specified earlier\n  debug: true,\n  whitelist: availableLanguages,\n  detection: options,\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","Backend","LanguageDetector","initReactI18next","fallbackLng","availableLanguages","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","cookieMinutes","cookieDomain","htmlTag","document","documentElement","checkWhitelist","use","init","debug","whitelist","detection","interpolation","escapeValue"],"sources":["C:/Users/carog/Desktop/GitHub Desktop/SITEBACHELORS/hola/src/i18n.js"],"sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nconst fallbackLng = ['en'];\nconst availableLanguages = ['en', 'ko', 'chi'];\n\n\nconst options = {\n  // order and from where user language should be detected\n  order: [ 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n\n  // cache user language on\n  caches: ['localStorage', 'cookie'],\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n\n  // optional expire and domain for set cookie\n  cookieMinutes: 10,\n  cookieDomain: 'myDomain',\n\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement,\n\n  // only detect languages that are in the whitelist\n  checkWhitelist: true\n}\n\ni18n\n  .use(Backend) // load translation using xhr -> see /public/locales. We will add locales in the next step\n\n  .use(LanguageDetector) // detect user language\n\n  .use(initReactI18next) // pass the i18n instance to react-i18next.\n\n  .init({\n    fallbackLng, // if user computer language is not on the list of available languages, than we will be using the fallback language specified earlier\n    debug: true,\n    whitelist: availableLanguages,\n    detection: options,\n\n    interpolation: {\n      escapeValue: false\n    },\n  });\n\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,MAAMC,WAAW,GAAG,CAAC,IAAI,CAAC;AAC1B,MAAMC,kBAAkB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AAG9C,MAAMC,OAAO,GAAG;EACd;EACAC,KAAK,EAAE,CAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC;EAErD;EACAC,iBAAiB,EAAE,KAAK;EACxBC,YAAY,EAAE,SAAS;EACvBC,kBAAkB,EAAE,YAAY;EAChCC,mBAAmB,EAAE,CAAC;EACtBC,wBAAwB,EAAE,CAAC;EAE3B;EACAC,MAAM,EAAE,CAAC,cAAc,EAAE,QAAQ,CAAC;EAClCC,eAAe,EAAE,CAAC,QAAQ,CAAC;EAAE;;EAE7B;EACAC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,UAAU;EAExB;EACAC,OAAO,EAAEC,QAAQ,CAACC,eAAe;EAEjC;EACAC,cAAc,EAAE;AAClB,CAAC;AAEDpB,IAAI,CACDqB,GAAG,CAACpB,OAAO,CAAC,CAAC;AAAA,CAEboB,GAAG,CAACnB,gBAAgB,CAAC,CAAC;AAAA,CAEtBmB,GAAG,CAAClB,gBAAgB,CAAC,CAAC;AAAA,CAEtBmB,IAAI,CAAC;EACJlB,WAAW;EAAE;EACbmB,KAAK,EAAE,IAAI;EACXC,SAAS,EAAEnB,kBAAkB;EAC7BoB,SAAS,EAAEnB,OAAO;EAElBoB,aAAa,EAAE;IACbC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEJ,eAAe3B,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}